stages:
  - build
  - test
  - release

.build-jobs:
  tags:
    - build
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'
      when: never
    - when: on_success

build-gtether:
  extends:
    - .build-jobs
  stage: build
  parallel:
    matrix:
      - TARGET:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
  script:
    - cargo build --package gtether --all-features --release --target $TARGET
  cache:
    key: "${CI_COMMIT_REF_NAME}-${TARGET}"
    policy: pull-push
    paths:
      - "target/"

test-gtether:
  extends:
    - .build-jobs
  stage: test
  needs:
    - job: build-gtether
      parallel:
        matrix:
          - TARGET: x86_64-unknown-linux-gnu
  script:
    - cargo +nightly test --package gtether --all-features --release -- --format=json -Z unstable-options --report-time | junitify --out test-results
  cache:
    key: "${CI_COMMIT_REF_NAME}-x86_64-unknown-linux-gnu"
    policy: pull
    paths:
      - "target/"
  artifacts:
    when: always
    reports:
      junit: test-results/*.xml

release-gtether-docs:
  extends:
    - .build-jobs
  stage: release
  needs:
    - job: build-gtether
      parallel:
        matrix:
          - TARGET: x86_64-unknown-linux-gnu
  script:
    - cargo doc --package gtether --no-deps --all-features --release
  cache:
    key: "${CI_COMMIT_REF_NAME}-x86_64-unknown-linux-gnu"
    policy: pull
    paths:
      - "target/"
  artifacts:
    expose_as: "docs"
    paths:
      - "target/doc/gtether/"

release-example-windows:
  extends:
    - .build-jobs
  stage: release
  parallel:
    matrix:
      - TARGET:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'
      when: never
    - if: $TARGET == "x86_64-unknown-linux-gnu"
      variables:
        BIN_NAME: windows
    - if: $TARGET == "x86_64-pc-windows-gnu"
      variables:
        BIN_NAME: windows.exe
  needs:
    - job: build-gtether
      parallel:
        matrix:
          - TARGET:
              - x86_64-unknown-linux-gnu
              - x86_64-pc-windows-gnu
  script:
    - cargo build --package windows --release --target $TARGET
  cache:
    key: "${CI_COMMIT_REF_NAME}-${TARGET}"
    policy: pull
    paths:
      - "target/"
  artifacts:
    expose_as: "example-windows"
    paths:
      - "target/x86_64-unknown-linux-gnu/release/windows"
      - "target/x86_64-pc-windows-gnu/release/windows.exe"

release-example-reversi:
  extends:
    - .build-jobs
  stage: release
  parallel:
    matrix:
      - TARGET:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != 'merge_request_event'
      when: never
    - if: $TARGET == "x86_64-unknown-linux-gnu"
      variables:
        BIN_NAME: reversi
    - if: $TARGET == "x86_64-pc-windows-gnu"
      variables:
        BIN_NAME: reversi.exe
  needs:
    - job: build-gtether
      parallel:
        matrix:
          - TARGET:
              - x86_64-unknown-linux-gnu
              - x86_64-pc-windows-gnu
  script:
    - cargo build --package reversi --release --target $TARGET
  cache:
    key: "${CI_COMMIT_REF_NAME}-${TARGET}"
    policy: pull
    paths:
      - "target/"
  artifacts:
    expose_as: "example-reversi"
    paths:
      - "target/x86_64-unknown-linux-gnu/release/reversi"
      - "target/x86_64-pc-windows-gnu/release/reversi.exe"